<templateSet group="mindsmash">
  <template name="$testC" value="(function () {&#10;  'use strict';&#10;&#10;  var moduleName = '$moduleName$';&#10;&#10;  describe('module: ' + moduleName, function () {&#10;&#10;    var $controller;&#10;&#10;    beforeEach(module(moduleName));&#10;&#10;    beforeEach(inject(function (_$controller_) {&#10;      $controller = _$controller_;&#10;    }));&#10;    &#10;    var controllerName = '$controllerName$';&#10;&#10;    describe('controller: ' + controllerName, function () {&#10;&#10;        function buildController() {&#10;            return $controller(controllerName, {&#10;&#10;            });&#10;        }&#10;&#10;        it('should $testCase$', function () {&#10;          // given&#10;          var ctrl = buildController();&#10;          $END$&#10;          // when&#10;        &#10;          // then&#10;        });&#10;&#10;    });&#10;  });&#10;  &#10;})();" shortcut="SPACE" description="Creates a Jasmine test for angular controllers" toReformat="true" toShortenFQNames="true">
    <variable name="moduleName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="controllerName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="testCase" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="$it" value="it('should $should$', function () {&#10;    // given&#10;    $END$&#10;    // when&#10;    &#10;    // then&#10;&#10;});" description="Creates &quot;it&quot; definition for Jasmine tests" toReformat="true" toShortenFQNames="true">
    <variable name="should" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="$directive" value="(function () {&#10;  'use strict';&#10;&#10;  angular&#10;      .module('$module$')&#10;      .directive('$directive$', $directiveFn$)&#10;      .controller('$directiveFn$Controller', $directiveFn$Controller);&#10;&#10;  function $directiveFn$() {&#10;    return {&#10;      restrict: '$restrict$',&#10;      templateUrl: '$url$',&#10;      scope : {},&#10;      bindToController: {&#10;      },&#10;      controller: '$directiveFn$Controller',&#10;      controllerAs: '$directive$'&#10;    };&#10;  }&#10;&#10;  function $directiveFn$Controller() {&#10;    var vm = this;&#10;    $END$&#10;  }&#10;})();&#10;" description="Creates angular directive" toReformat="true" toShortenFQNames="true">
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="directive" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="directiveFn" expression="capitalize(directive)" defaultValue="" alwaysStopAt="true" />
    <variable name="restrict" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="url" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="$testD" value="(function () {&#10;  'use strict';&#10;&#10;  var moduleName = '$moduleName$';&#10;  var directiveName = '$directiveName$';&#10;&#10;  describe('module: ' + moduleName, function () {&#10;&#10;    var $controller;&#10;&#10;    beforeEach(module(moduleName));&#10;    &#10;    describe('directive: ' + directiveName, function () {&#10;&#10;        beforeEach(inject(function (_$controller_) {&#10;          $controller = _$controller_;&#10;        }));&#10;        &#10;        var controllerName = '$controllerName$';&#10;    &#10;        describe('controller: ' + controllerName, function () {&#10;    &#10;            function buildController() {&#10;                return $controller(controllerName, {&#10;    &#10;                });&#10;            }&#10;    &#10;            it('should $testCase$', function () {&#10;              // given&#10;              var ctrl = buildController();&#10;              $END$&#10;              // when&#10;            &#10;              // then&#10;            });&#10;    &#10;        });&#10;        &#10;      });&#10;      &#10;  });&#10;})();" shortcut="SPACE" description="Creates a Jasmine test for angular directives containin a controller" toReformat="true" toShortenFQNames="true">
    <variable name="moduleName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="directiveName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="controllerName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="testCase" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="$testLink" value="(function () {&#10;  'use strict';&#10;&#10;  var moduleName = '$module$';&#10;  var directiveName = '$directiveName$';&#10;&#10;  describe('module: ' + moduleName, function () {&#10;&#10;    var $scope, $compile, template;&#10;&#10;    beforeEach(module(moduleName));&#10;&#10;    describe('directive: ' + directiveName, function () {&#10;&#10;      beforeEach(function() {&#10;        module(function($provide) {&#10;          // $provide.value();&#10;        });&#10;      });&#10;&#10;      beforeEach(inject(function ($rootScope, _$compile_) {&#10;        $scope = $rootScope.$new();&#10;        $compile = _$compile_;&#10;        template = '&lt;$directiveName$&gt;&lt;/$directiveName$&gt;';&#10;      }));&#10;&#10;      it('should $should$', function () {&#10;        // given&#10;        $END$&#10;        // when&#10;        var element = $compile(angular.element(template))($scope);&#10;        $scope.$digest();&#10;&#10;        // then&#10;      });&#10;&#10;    });&#10;&#10;  });&#10;})();" shortcut="SPACE" description="Creates a Jasmine test for angular directives with the link function under test" toReformat="true" toShortenFQNames="true">
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="directiveName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="should" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="$describe" value="describe('$describe$', function() {&#10;&#10;    it('should $should$', function () {&#10;        // given&#10;        $END$&#10;        // when&#10;        &#10;        // then&#10;    &#10;    });&#10;&#10;});" description="Creates &quot;describe&quot; definition for Jasmine tests" toReformat="true" toShortenFQNames="true">
    <variable name="describe" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="should" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="$docD" value="  /**&#10;   * @ngdoc directive&#10;   * @name $module$.$directiveName$:$directiveName$&#10;   * @element ANY&#10;   * @restrict AE&#10;   * @scope&#10;   *&#10;   * @description $END$&#10;   *&#10;   * @param {}&#10;   *&#10;   * @requires&#10;   *&#10;   */" description="Creates an ngDoc comment block for directives." toReformat="true" toShortenFQNames="true">
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="directiveName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="$docF" value="/**&#10; * @ngdoc method&#10; * @name $module$#$methodName$&#10; * @methodOf $module$&#10; *&#10; * @description&#10; * $END$&#10; *&#10; * @param {}&#10; * @returns {}&#10; */" description="Creates an  ngDoc comment block for functions and methods." toReformat="true" toShortenFQNames="true">
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="methodName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="$docS" value="  /**&#10;   * @ngdoc service&#10;   * @name $module$.$name$&#10;   *&#10;   * @description&#10;   * $END$&#10;   *&#10;   * @requires &#10;   */" description="Creates an ngDoc comment block for services." toReformat="true" toShortenFQNames="true">
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="name" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="$docM" value="  /**&#10;   * @ngdoc overview&#10;   * @name $module$&#10;   *&#10;   * @description&#10;   * $END$&#10;   *&#10;   * @requires&#10;   */" description="Creates an ngDoc comment block for angular modules" toReformat="true" toShortenFQNames="true">
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="$service" value="(function () {&#10;  'use strict';&#10;&#10;  angular.module('$module$')&#10;      .factory('$serviceName$', $serviceName$);&#10;&#10;  function $serviceName$() {&#10;&#10;    return {&#10;      $function$: $function$&#10;    };&#10;&#10;    function $function$() {&#10;        $END$&#10;    }&#10;&#10;})();" description="Creates an angular service" toReformat="true" toShortenFQNames="true">
    <variable name="module" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="serviceName" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="function" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="true" />
      <option name="JSX_HTML" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>